# ═══════════════════════════════════════════════════════════
#                    GarudaHS Configuration v2.0
#                   Enhanced Anti-False Positive System
# ═══════════════════════════════════════════════════════════

# 🔧 DETECTION ENGINE SETTINGS
# ═══════════════════════════════════════════════════════════

# Detection rules file (JSON format with advanced rules)
detection_rules_file=detection_rules.json

# Message configuration file (localized messages)
messages_file=messages.json

# Minimum confidence level for actions (LOW, MEDIUM, HIGH, CRITICAL)
minimum_action_level=HIGH

# Enable whitelist protection (recommended: true)
enable_whitelist_protection=true

# Enable trusted path validation (recommended: true)
enable_path_validation=true

# Enable file hash validation (future feature)
enable_file_hash_validation=false

# 🎮 GAME DETECTION SETTINGS
# ═══════════════════════════════════════════════════════════

# Game window titles to detect (comma-separated)
game_window_titles=Ragnarok,Ragnarok Online,RRO

# Game process names to detect (comma-separated)
game_process_names=ragnarok.exe,rro.exe,ragexe.exe

# Game installation paths (for trusted path validation)
game_trusted_paths=C:\Program Files\Gravity\,C:\Games\RO\,D:\Games\Ragnarok\

# 📊 SCANNING SETTINGS
# ═══════════════════════════════════════════════════════════

# Scan interval in milliseconds (1000-60000)
scan_interval_ms=3000

# Enable adaptive scanning (adjust interval based on activity)
enable_adaptive_scanning=true

# Minimum scan interval for adaptive mode (milliseconds)
min_scan_interval=1000

# Maximum scan interval for adaptive mode (milliseconds)
max_scan_interval=10000

# 🚨 RESPONSE SETTINGS
# ═══════════════════════════════════════════════════════════

# Show popup warnings when threats detected
enable_popup_warnings=true

# Automatically terminate game for HIGH+ confidence detections
auto_terminate_game=true

# Log low confidence detections (for analysis)
log_low_confidence=true

# Send detection reports (future feature)
enable_reporting=false

# 📝 LOGGING SETTINGS
# ═══════════════════════════════════════════════════════════

# Enable logging to file
enable_logging=true

# Log file path
log_file_path=garudahs.log

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
log_level=INFO

# Maximum log file size (MB, 0 = unlimited)
max_log_size=10

# Enable log rotation
enable_log_rotation=true

# 🔄 ADVANCED SETTINGS
# ═══════════════════════════════════════════════════════════

# Enable file watching for config changes
enable_file_watching=true

# Language for messages (en, id)
language=en

# Enable performance monitoring
enable_performance_monitoring=true

# Enable false positive learning (future feature)
enable_fp_learning=false

# Debug mode (more verbose logging)
debug_mode=false

# ═══════════════════════════════════════════════════════════
#                    LAYERED DETECTION SYSTEM
# ═══════════════════════════════════════════════════════════

# 🔍 DETECTION LAYERS
# ═══════════════════════════════════════════════════════════

# Enable layered detection system
enable_layered_detection=true

# Detection layers to enable (comma-separated)
enabled_layers=ProcessDetection,DebuggerDetection,ThreadHijackDetection,ModuleValidation,OverlayDetection

# Confidence thresholds (0.0 - 1.0)
action_confidence_threshold=0.8
warning_confidence_threshold=0.6
log_confidence_threshold=0.3

# Require multiple signal types for high confidence actions
require_multiple_signals=true

# Signal timeout (how long signals remain active in milliseconds)
signal_timeout_ms=30000

# 🎮 GAME STATE MANAGEMENT
# ═══════════════════════════════════════════════════════════

# Enable game state detection
enable_game_state_detection=true

# Startup grace period (no aggressive detection after game start)
startup_grace_period_ms=15000

# Loading detection delay (wait before aggressive scanning)
loading_detection_delay_ms=10000

# Game state check interval
game_state_check_interval_ms=2000

# Enable adaptive detection mode based on game state
enable_adaptive_detection=true

# 🚨 ACTION MANAGEMENT
# ═══════════════════════════════════════════════════════════

# Enable enforcement mode (false = log only)
enforcement_mode=false

# Require user confirmation for critical actions
require_confirmation_critical=true

# Enable gradual escalation (warnings before termination)
enable_gradual_escalation=true

# Escalation threshold (violations before escalating)
escalation_threshold=3

# Action timeout for user responses
action_timeout_ms=30000

# 🛡️ WHITELIST & TRUSTED MODULES
# ═══════════════════════════════════════════════════════════

# Trusted modules (comma-separated)
trusted_modules=kernel32.dll,ntdll.dll,user32.dll,steamoverlay.dll,steam_api.dll,d3d9.dll,d3d11.dll,opengl32.dll

# Trusted paths for modules (semicolon-separated)
trusted_module_paths=C:\Windows\System32\;C:\Windows\SysWOW64\;C:\Program Files\Steam\;C:\Program Files (x86)\Steam\

# System process whitelist
system_process_whitelist=explorer.exe,dwm.exe,winlogon.exe,csrss.exe,svchost.exe,lsass.exe

# 📊 FEEDBACK & LEARNING
# ═══════════════════════════════════════════════════════════

# Enable feedback learning system
enable_feedback_learning=true

# Learning rate for adaptive thresholds
learning_rate=0.1

# Maximum feedback entries to store
max_feedback_entries=1000

# Auto-adjust thresholds based on feedback
enable_auto_threshold_adjustment=true

# 🔧 ADVANCED DETECTION SETTINGS
# ═══════════════════════════════════════════════════════════

# Signal weights (how much each detection type contributes)
weight_process_detection=1.0
weight_debugger_detection=0.9
weight_thread_hijack=0.8
weight_module_injection=0.7
weight_memory_scan=0.6
weight_hook_detection=0.8
weight_timing_anomaly=0.5
weight_network_anomaly=0.4
weight_overlay_detection=0.75
weight_graphics_hook=0.85
weight_rendering_anomaly=0.65

# Detection sensitivity levels
debugger_detection_sensitivity=HIGH
thread_hijack_sensitivity=MEDIUM
module_validation_sensitivity=HIGH
overlay_detection_sensitivity=HIGH

# 🌐 CROSS-PLATFORM COMPATIBILITY
# ═══════════════════════════════════════════════════════════

# Windows version compatibility mode
windows_compatibility_mode=AUTO

# Architecture detection (AUTO, x86, x64)
architecture_mode=AUTO

# Fullscreen detection compatibility
fullscreen_detection_mode=ENHANCED

# Multi-monitor support
enable_multi_monitor_support=true

# 🎨 OVERLAY SCANNER SETTINGS
# ═══════════════════════════════════════════════════════════

# Enable overlay detection system
enable_overlay_scanner=true

# DirectX overlay detection
enable_directx_detection=true
enable_directx9_detection=true
enable_directx11_detection=true
enable_directx12_detection=true

# OpenGL overlay detection
enable_opengl_detection=true

# Window overlay detection
enable_window_overlay_detection=true
enable_topmost_window_detection=true
enable_layered_window_detection=true

# Graphics API hook detection
enable_graphics_hook_detection=true
enable_api_hook_scanning=true

# Screen capture detection
enable_screen_capture_detection=true

# Overlay scanner scan interval (milliseconds)
overlay_scan_interval_ms=5000

# Overlay detection confidence threshold (0.0 - 1.0)
overlay_confidence_threshold=0.6

# Enable real-time overlay monitoring
enable_realtime_overlay_monitoring=true

# Log overlay detections
log_overlay_detections=true

# 🎯 CONFIDENCE SCORES (Reduced for false positive prevention)
directx_hook_confidence=0.75
opengl_hook_confidence=0.75
window_overlay_confidence=0.60
screen_capture_confidence=0.65
endscene_hook_confidence=0.80
dxgi_hook_confidence=0.70

# 🔧 DETECTION THRESHOLDS
max_module_count=2048
hook_detection_buffer_size=32
transparency_threshold=200
detection_history_limit=200
min_scan_interval=2000
max_scan_interval=120000

# 🛡️ FALSE POSITIVE PREVENTION
enable_strict_validation=false
enable_legitimate_app_protection=true
false_positive_reduction_factor=0.8

# Whitelisted processes (comma-separated) - EXPANDED LIST
overlay_whitelisted_processes=explorer.exe,dwm.exe,discord.exe,steam.exe,obs64.exe,obs32.exe,nvcontainer.exe,geforce experience.exe,msiafterburner.exe,rtss.exe,devenv.exe,code.exe

# Suspicious modules for hook detection (comma-separated)
overlay_suspicious_modules=d3d9hook,d3d11hook,opengl32hook,overlay,inject,cheat,hack

# ═══════════════════════════════════════════════════════════
#                    ANTI-DEBUG PROTECTION
# ═══════════════════════════════════════════════════════════

# 🛡️ ANTI-DEBUG SETTINGS
# ═══════════════════════════════════════════════════════════

# Enable anti-debug protection system
enable_antidebug=true

# Basic detection methods
enable_basic_api_detection=true
enable_nt_query_detection=true
enable_peb_flags_detection=true
enable_hardware_breakpoint_detection=true
enable_timing_attack_detection=false
enable_exception_handling_detection=true
enable_memory_protection_detection=true
enable_thread_context_detection=false
enable_heap_flags_detection=true
enable_system_call_detection=true

# 🎯 TIMING CONFIGURATION
# ═══════════════════════════════════════════════════════════

# Timing threshold for anomaly detection (milliseconds)
timing_threshold_ms=10

# Maximum timing variance allowed (milliseconds)
max_timing_variance=5

# Anti-debug scan interval (milliseconds)
antidebug_scan_interval_ms=5000

# Continuous monitoring interval (milliseconds)
continuous_monitoring_interval=1000

# 🚨 RESPONSE CONFIGURATION
# ═══════════════════════════════════════════════════════════

# Enable automatic response to debugger detection
enable_auto_response=false

# Enable logging of debug attempts
enable_antidebug_logging=true

# Enable callbacks for debug detection
enable_antidebug_callbacks=true

# Confidence threshold for actions (0.0 - 1.0)
antidebug_confidence_threshold=0.8

# 🔧 ADVANCED OPTIONS
# ═══════════════════════════════════════════════════════════

# Enable stealth mode (hide anti-debug presence)
enable_stealth_mode=true

# Enable randomization of detection timing
enable_randomization=true

# Enable multi-threading for detection
enable_multithreading=false

# Maximum detection history entries
max_detection_history=100

# Detection sensitivity (0.0 - 1.0, higher = more sensitive)
detection_sensitivity=0.8

# Enable continuous monitoring mode
enable_continuous_monitoring=true

# 🎮 DEBUGGER RESPONSE ACTIONS
# ═══════════════════════════════════════════════════════════

# Action when debugger detected (LOG, WARN, TERMINATE, CORRUPT)
debugger_detected_action=WARN

# Delay before taking action (milliseconds)
action_delay_ms=1000

# Enable memory corruption on detection
enable_memory_corruption=false

# Enable data encryption on detection
enable_data_encryption=false

# 📊 DETECTION WEIGHTS
# ═══════════════════════════════════════════════════════════

# Weight for each detection method (0.0 - 1.0)
weight_basic_api=0.9
weight_nt_query=0.95
weight_peb_flags=0.95
weight_hardware_breakpoints=0.9
weight_timing_attacks=0.7
weight_exception_handling=0.75
weight_memory_protection=0.8
weight_thread_context=0.85
weight_heap_flags=0.9
weight_system_calls=0.8

# 🔍 DEBUGGER SIGNATURES
# ═══════════════════════════════════════════════════════════

# Known debugger process names (comma-separated)
known_debuggers=ollydbg.exe,x64dbg.exe,x32dbg.exe,ida.exe,ida64.exe,windbg.exe,cheatengine.exe,processhacker.exe,procmon.exe,apimonitor.exe

# Known analysis tools (comma-separated)
analysis_tools=procexp.exe,procmon.exe,regmon.exe,filemon.exe,wireshark.exe,fiddler.exe,burpsuite.exe

# Suspicious window titles (comma-separated)
suspicious_windows=OllyDbg,x64dbg,IDA Pro,Cheat Engine,Process Hacker,API Monitor,Detours,WinAPIOverride
